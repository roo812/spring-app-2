version: 0.2

env:
  variables:
    REPOSITORY_NAME: spring-app-2 # Your ECR repo name

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
      - REGION=$AWS_DEFAULT_REGION
      - REPOSITORY_URI=$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$REPOSITORY_NAME
      - echo "ECR Repository URI: $REPOSITORY_URI"
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $REPOSITORY_URI
      - IMAGE_TAG=build-$CODEBUILD_RESOLVED_SOURCE_VERSION #creates a unique docker image tag for this build
      - echo "Image tag: $IMAGE_TAG"

  build:
    commands:
      - echo "Building the Maven project..."
      - mvn clean package -DskipTests
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Writing imagedefinitions.json for ECS..."
      - printf '[{"name":"spring-app","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json #creates a file called imagedefinations which is required for ecs/code deploy in deployment stage.ECS uses this file to know which image to run in which container.
      - echo "Build completed successfully."

artifacts:
  files:
    - imagedefinitions.json
